{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer, productDetailsReducer } from \"./reducers/productReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport { userLoginReducer } from \"./reducers/userReducer\";\nconst userInfoFromStoreg = lo;\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer\n});\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/Study Material/Work/MERN/shoping-app/client/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userInfoFromStoreg","lo","cartItemsFromStorage","localStorage","getItem","JSON","parse","reducer","productList","productDetails","cart","userLogin","initialState","cartItems","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,kBADF,EAEEC,qBAFF,QAGO,2BAHP;AAIA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AAEA,MAAMC,kBAAkB,GAAGC,EAA3B;AAEA,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,OAAO,GAAGf,eAAe,CAAC;AAC9BgB,EAAAA,WAAW,EAAEZ,kBADiB;AAE9Ba,EAAAA,cAAc,EAAEZ,qBAFc;AAG9Ba,EAAAA,IAAI,EAAEZ,WAHwB;AAI9Ba,EAAAA,SAAS,EAAEZ;AAJmB,CAAD,CAA/B;AAOA,MAAMa,YAAY,GAAG;AACnBF,EAAAA,IAAI,EAAE;AAAEG,IAAAA,SAAS,EAAEX;AAAb;AADa,CAArB;AAIA,MAAMY,UAAU,GAAG,CAACpB,KAAD,CAAnB;AACA,MAAMqB,KAAK,GAAGxB,WAAW,CACvBgB,OADuB,EAEvBK,YAFuB,EAGvBjB,mBAAmB,CAACF,eAAe,CAAC,GAAGqB,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n} from \"./reducers/productReducer\";\r\nimport { cartReducer } from \"./reducers/cartReducer\";\r\nimport { userLoginReducer } from \"./reducers/userReducer\";\r\n\r\nconst userInfoFromStoreg = lo\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n});\r\n\r\nconst initialState = {\r\n  cart: { cartItems: cartItemsFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}