{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study Material\\\\Work\\\\MERN\\\\shoping-app\\\\client\\\\src\\\\screens\\\\CartScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Link from 'react-router-dom';\nimport Message from '../components/shared/Message';\nimport { Row, Col, Form, Button, Card, Image, ListGroup } from \"react-bootstrap\";\nimport { addToCart } from \"../actions/cartActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CartScreen = ({\n  match,\n  location,\n  history\n}) => {\n  _s();\n\n  const productId = match.params.id;\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    } else {}\n  }, [dispatch, productId, qty]);\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Shopping Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 19\n        }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n          children: [\"Your cart is Empty !\", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(CartScreen, \"doC4f5cneqGDIuFR+PmVAAtKl6c=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CartScreen;\nexport default CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["D:/Study Material/Work/MERN/shoping-app/client/src/screens/CartScreen.jsx"],"names":["React","useEffect","useDispatch","useSelector","Link","Message","Row","Col","Form","Button","Card","Image","ListGroup","addToCart","CartScreen","match","location","history","productId","params","id","qty","search","Number","split","dispatch","cart","state","cartItems","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SACEC,GADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,MAJF,EAKEC,IALF,EAMEC,KANF,EAOEC,SAPF,QAQO,iBARP;AASA,SAASC,SAAT,QAA0B,wBAA1B;;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAAkC;AAAA;;AAEnD,QAAMC,SAAS,GAAGH,KAAK,CAACI,MAAN,CAAaC,EAA/B;AAEA,QAAMC,GAAG,GAAGL,QAAQ,CAACM,MAAT,GAAkBC,MAAM,CAACP,QAAQ,CAACM,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAD,CAAxB,GAA0D,CAAtE;AACA,QAAMC,QAAQ,GAAGvB,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,SAAJ,EAAe;AACbO,MAAAA,QAAQ,CAACZ,SAAS,CAACK,SAAD,EAAYG,GAAZ,CAAV,CAAR;AACD,KAFD,MAEO,CACN;AACF,GALQ,EAKN,CAACI,QAAD,EAAWP,SAAX,EAAsBG,GAAtB,CALM,CAAT;AAOA,QAAMK,IAAI,GAAGvB,WAAW,CAAEwB,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAgBF,IAAtB;AAEA,sBACE;AAAA,2BACE,QAAC,GAAD;AAAA,6BACM,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,gCACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADN,EAGYE,SAAS,CAACC,MAAV,KAAqB,CAArB,gBACM,QAAC,OAAD;AAAA,0DAEM,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFN;AAAA;AAAA;AAAA;AAAA;AAAA,gBADN,gBAKI,QAAC,SAAD;AAAW,UAAA,OAAO,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,gBARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAiBD,CAlCD;;GAAMf,U;UAKaZ,W,EASJC,W;;;KAdTW,U;AAoCN,eAAeA,UAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Link from 'react-router-dom'\r\nimport Message from '../components/shared/Message'\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  Image,\r\n  ListGroup,\r\n} from \"react-bootstrap\";\r\nimport { addToCart } from \"../actions/cartActions\";\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n\r\n  const productId = match.params.id;\r\n\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    } else {\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n            <Col md={8}>\r\n                  <h1>Shopping Cart</h1>                  \r\n                  {\r\n                        cartItems.length === 0 ? (\r\n                              <Message>\r\n                                    Your cart is Empty !\r\n                                    <Link to='/'>Go Back</Link>\r\n                              </Message>\r\n                        ): (<ListGroup variant=\"flush\"></ListGroup>)\r\n                  }\r\n            </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n"]},"metadata":{},"sourceType":"module"}